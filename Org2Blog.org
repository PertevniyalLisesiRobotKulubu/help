#+PROPERTY: header-args :tangle "./.org-mode-org2blog.emacs.el"

* Org2blog
   :PROPERTIES:
   :ID:       orgmode:gcr:vela:BA37913C-D781-453B-B438-F6464B60CFDF
   :END:

Configure Org2blog for use, development, and support.

Sysop is likely to use this periodically.

Start EMACS with this command:

#+BEGIN_EXAMPLE
emacs --debug-init --no-init-file --no-splash --background-color white --foreground-color black --vertical-scroll-bars --eval '(switch-to-buffer "*Messages*")' --name O2B-TEST --title O2B-TEST --load ~/src/help/.org-mode-org2blog.emacs.el
#+END_EXAMPLE

#+NAME: orgmode:gcr:vela:E32697AE-784E-458F-A042-D9B559908721
#+BEGIN_SRC emacs-lisp :results output silent
(load-file "~/src/help/.org-mode-fundamentals.emacs.el")
#+END_SRC

** Watch What You Eat
  :PROPERTIES:
  :ID:       orgmode:gcr:vela:59073E74-83D9-4218-917C-789A27D57E5A
  :END:

*Code requiring package-management can only follow this block.*

Before ELPA, I used SVN to manage software packages for EMACS. After ELPA,
I used ELPA-packages. Now this system uses MELPA and GNU. MELPA packages always
have their issues fixed very quickly. GNU packages rarely have issues.

Initialize Package.

#+NAME: orgmode:gcr:vela:804FD197-8B2A-49F5-A4CB-48F6036FBCEC
#+BEGIN_SRC emacs-lisp :results output silent
(package-initialize)
(add-to-list 'package-archives
             '("melpa" . "http://melpa.org/packages/") t)
(add-to-list 'package-archives
             '("gnu" . "http://elpa.gnu.org/packages/") t)
#+END_SRC

Use-Package is the most configurable and performant way to manage ELPA packages.

Add the Use-Package distribution the load path.

#+NAME: orgmode:gcr:vela:FAB22F99-AB0C-4A75-AFEF-9E680A5EE95D
#+BEGIN_SRC emacs-lisp :results output silent
(add-to-list 'load-path"~/src/use-package")
#+END_SRC

Load Use-Package and it's partner Diminish. Every package loaded before this
point uses ~require~. Every package loaded after this point uses ~use-package~.

#+NAME: orgmode:gcr:vela:54841CA9-6491-46E8-8F40-4DCF7182CCD7
#+BEGIN_SRC emacs-lisp :results output silent
(eval-when-compile
  (require 'use-package))
(use-package diminish)
#+END_SRC

** Blog
   :PROPERTIES:
   :ID:       orgmode:gcr:vela:F5E33EB2-2E26-435C-85F6-26CB7CE7FC56
   :END:

#+BEGIN_QUOTE
An elisp implementation of clientside XML-RPC
#+END_QUOTE

#+NAME: orgmode:gcr:vela:E99598C8-D394-484B-A7FB-333FA2544CB0
#+BEGIN_SRC emacs-lisp :results output silent
(use-package xml-rpc
  :ensure t)
#+END_SRC

#+BEGIN_QUOTE
Weblog maintenance via XML-RPC APIs
#+END_QUOTE

#+NAME: orgmode:gcr:vela:79F63BAD-0CD7-4A97-8A7D-CBAA51BB48E1
#+BEGIN_SRC emacs-lisp :results output silent
(use-package metaweblog
  :ensure t)
#+END_SRC

#+BEGIN_QUOTE
Blog from Org mode to wordpress
#+END_QUOTE

#+NAME: orgmode:gcr:vela:DF522DDF-4A71-4D8B-B6F9-9BD6F11EB832
#+BEGIN_SRC emacs-lisp :results output silent
(add-to-list 'load-path "~/src/org2blog")
(require 'org2blog-autoloads)
#+END_SRC

Org2Blog depends on Org-Mode. This system loads Org-Mode from Git. Enter the
=ELPA= cache directory and delete it.

This system works with WisdomAndWonder. It keeps its posts separate giving focus
to each Web.

#+NAME: orgmode:gcr:vela:9C1EAE6B-9D05-43FB-AC35-7FBFE6CB4F7E
#+BEGIN_SRC emacs-lisp :results output silent
(setq org2blog/wp-track-posts nil)
#+END_SRC

Configure Org2Blog.

#+NAME: orgmode:gcr:vela:BCA2FE29-930C-4E66-A662-17FF451D1591
#+BEGIN_SRC emacs-lisp :results output silent
(setq org2blog/wp-blog-alist
      '(("wisdomandwonder"
         :url "https://www.wisdomandwonder.com/xmlrpc.php"
         :username "admin"
         :default-categories ("Article" "Link")
         :confirm t
         :show 'show)))
#+END_SRC
