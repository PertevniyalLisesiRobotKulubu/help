* README

HELP Enables Literate Programming.

Setup:

1) Clone Org-Mode to =~/src/=.

* Webs We Weave
** The Whole Enchilada
   :PROPERTIES:
   :header-args:   :tangle "./.emacs.el" :comments no
   :END:

Configure EMACS to do everything provided by this document.

Sysop is likely to use this on a daily basis.

#+BEGIN_SRC emacs-lisp
«Principle-of-Least-Astonishment»
#+END_SRC

* Literate Programming
** Org-Mode Exemple Complet Minimal
   :PROPERTIES:
   :noweb-ref: org-mode-ecm
   :END:

** Tangling
** Weaving
** Programming
* Piano Lessons
* Quiet and Pleasant
* Principle of Least Astonishment
  :PROPERTIES:
  :noweb-ref: Principle-of-Least-Astonishment
  :END:

EMACS can load 3 different representations of a Emacs-Lisp source file code
OOTB. The name of source code file is the value before the file extension. When
you pass ~load~ a name it searches for an acceptable representation. Representation
types are indicated by their extension name. =.el= is a human readable and
uncompiled. =.elc= is not human readable and compiled. =.gz= is Gzip compressed and
contains =.el= or =.elc= files.

The variable ~load-suffixes~ determines the order for which text and byte-code
representations are first searched by extension-name. The variable
~load-file-rep-suffixes~ determines the order for all other extension types.

OOTB, EMACS combines the productivity of REPL style of development with the
speed of compiled code by ~load~'ing byte-code first, text second, and compressed
third. This workflow gives you the fastest code at run-time and lets you
experiment with new features stored in text. When you are ready to use them
every time, you compile them. There is only one downside of this approach: when
you forget that it works this way it can be confusing.

When you forget about that style of system you end up with surprising behavior.
The surprise comes when you forget to compile code and then write new code that
depends on the now old version of that code. After the next build, your system
can break in surprising ways. This violates the Principle of Least Astonishment.

HELP values predictability so it does the simplest thing possible: ~load~ searches
for the newest representation of a file and uses that one. It assumes that Sysop
has total and complete control over the management of file representations.

This is the *first* thing that /ought/ to happen in the initialization of *any*
tangled system.

#+BEGIN_SRC emacs-lisp
(setq load-prefer-newer t)
#+END_SRC

* Watch What You Eat
* Style Guide

- Code Block
  - Tell the story in speech, and then in code.
  - Consider it another paragraph and indent appropriately.
    - Never separate a paragraph and and a Code Block with a colon.
- Content
  - When importing update to conform with Style-Guide.
- Dictionary
  - Out of the Box (OOTB) :: The default configuration of EMACS.
  - Sysop :: A proper noun. The System-Operator. The human operating this EMACS
    based Org-Mode enabled literate programming system. Yourself.
  - Tangle :: A verb. Assemble a document for consumption by another program or
    machine.
  - Weave :: A verb. Prepare a document for consumption by a human.
- Entity
  - Code Snippet
    - Use ~code style~.
  - Non-Code Snippet
    - Program names, file types
    - Use =verbatim= style
  - Package
    - Same as Headline.
    - Dashes separate definition.
    - Acronyms are all upper case to distinguish from words for example "GNU"
      vs "Gnu".
- Headline
  - Capitalize nouns, verbs, and adjectives.
  - Don't capitalize conjunctions unless they are starting the definition.
  - Sell this "chapter" to the reader.
- Hyperlink
  - External
    - Exclude those easily found with a search-engine unless you are willing to
      verify their existence frequently.
  - Internal
    - Heading artifacts can be referenced so the need here is minimal to
      non-existent.
- Literate Programming
  - Comments
    - Exclude from tangle-blocks and rely on source-block for traceability
  - Noweb-Ref
    - Same as Headline.
    - Replace spaces with dashes.
    - Probably the Heading name.
- Maintenance
  - Frequently check spelling, grammar, and weasel-words.
- Plain List
  - End single sentences with a period.
- Programming Language
  - Emacs-Lisp
    - Use ~t~ for ~true~.
- Voice
  - The audience is Sysop.
  - The audience is another EMACS user.
  - Pleasant conversation style.
  - Simple and detailed.
  - Provide answers; this document is an answer.
  - Do not pose questions; this document is not a question.
- Word Choice
  - Use Arabic numerals.
  - Instead of writing "tells EMACS", communicate the result.
  - "HELP" not "this system".
