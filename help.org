* Webs We Weave
** The Whole Enchilada
   :PROPERTIES:
   :header-args:   :tangle "./.emacs.el" :comments no
   :END:

This heading configures EMACS to do everything defined in this document. The
Operator is likely to use this on a daily basis.

#+BEGIN_SRC emacs-lisp
«Principle-of-Least-Astonishment»
#+END_SRC

* Literate Programming
** Org-Mode Exemple Complet Minimal
** Tangling
** Weaving
** Programming
* Piano Lessons
* Quiet and Pleasant
* Principle of Least Astonishment
  :PROPERTIES:
  :noweb-ref: Principle-of-Least-Astonishment
  :END:

When you develop Emacs-Lisp code you work with two representations: text and
byte-code. For every text representation of a file there is also a byte-code
representation of a file. They have the same name and different extensions.
Text ends with =.el= and byte-code ends with =.elc=. EMACS can load
both representations. You may use these two files to develop a personal
development workflow.

You may compile text to byte-code for a speed increase. You may selectively
compile individual artifacts to evaluate their impact on your system. This
workflow is not only faster, it allows a code-and-run development style. You
make your changes in text and selectively compile them to evaluate their impact
on your system. When you run with this configuration you may also
unintentionally compile something to byte-code, resulting in unexpected
behavior. It is also very easy to forget to compiles changes that you had wanted
to include at run-time.

This System does the simplest thing possible: when told to load a file it loads
the newest representation available. It relies on version control branches to
selectively experiment with features in a predictable and simpler manner.

This is the *first* thing that needs to happen in the initialization of any
tangled system.

#+BEGIN_SRC emacs-lisp
(setq load-prefer-newer t)
#+END_SRC
* Watch What You Eat
* Style Guide

- Code Block
  - Tell the story in speech, and then in code.
  - Consider it another paragraph and indent appropriately.
    - Never separate a paragraph and and a Code Block with a colon.
- Content
  - When importing update to conform with Style-Guide.
- Dictionary
  - Self Reference :: A noun. "This System". "The Operator".
  - Tangle :: A verb. Assemble a document for consumption by another program or
    machine.
  - Weave :: A verb. Prepare a document for consumption by a human.
- Entity
  - Code Snippet
    - Use ~code style~.
  - Package
    - Same as Headline.
    - Dashes separate definition.
    - Acronyms are all upper case to distinguish from words for example "GNU"
      vs "Gnu".
- Headline
  - Capitalize nouns, verbs, and adjectives.
  - Don't capitalize conjunctions unless they are starting the definition.
  - Sell this chapter to the reader.
- Hyperlink
  - External
    - Exclude those easily found with a search-engine unless you are willing to
      verify their existence frequently.
  - Internal
    - Heading artifacts can be referenced so the need here is minimal to
      non-existent.
- Plain List
  - End single sentences with a period.
- Literate Programming
  - Comments
    - Exclude from tangle-blocks and rely on source-block for traceability
  - Noweb-Ref
    - Same as Headline.
    - Replace spaces with dashes.
    - Probably the Heading name.
- Maintenance
  - Frequently check spelling, grammar, and weasel-words.
- Programming Language
  - Emacs-Lisp
    - Use ~t~ for ~true~.
- Word Choice
  - Use Arabic numerals.
